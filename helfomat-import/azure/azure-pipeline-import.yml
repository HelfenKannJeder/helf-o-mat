trigger:
  branches:
    include:
      - '*'


variables:
  dockerRegistryServiceConnection: 'HelfenKannJeder-containers'
  containerRegistry: 'helfenkannjedercontainer.azurecr.io'
  imageRepository: 'helf-o-mat.import'
  dockerFilePath: 'helfomat-import/azure/Dockerfile'
  dockerBuildContext: '.'
  tagDevelop: '$(Build.SourceVersion)'
  tagMaster: '$(Build.SourceVersion)'
  k8sDirectory: 'helfomat-import/azure/k8s'


stages:
  - stage: Build
    jobs:
      - job: Build
        displayName: Build & Test
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              options: '-Phelfomat-import -pl helfomat-import -am'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false


  - stage: BuildDevelop
    displayName: Build Docker Develop
    dependsOn: Build
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.Reason'], 'Manual')))
    jobs:
    - job: BuildPushDockerDevelop
      displayName: Build & Push Docker Develop
      steps:
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerFilePath)
          buildContext: $(dockerBuildContext)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tagDevelop)

      - upload: $(k8sDirectory)
        artifact: k8s

  - stage: BuildMaster
    displayName: Build Docker Master
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
    - job: BuildPushDockerMaster
      displayName: Build & Push Docker Master
      steps:
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerFilePath)
          buildContext: $(dockerBuildContext)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tagMaster)

      - upload: $(k8sDirectory)
        artifact: k8s